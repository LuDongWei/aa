自适应网页设计：http://www.ruanyifeng.com/blog/2012/05/responsive_web_design.html


一,‘自适应网页设计’的概念
范例：http://alistapart.com/d/responsive-web-design/ex/ex-site-flexible.html#

二，允许网页宽度自动调整
网页代码的头部加入
<meta name='viewport' content='width=device-width,initial-scale=1; />

viewport的网页默认的宽度和高度，上面这行代码的意思是：
网页的宽度默认等于屏幕宽度（windth=device-width）
原始缩放比例（initial-scale=1）
即网页初始大小占屏幕面积的100%

所有游览器都支持，包括IE9。
对于那些老式游览器（主要IE6，7,8）需要 css3-mediaqueries.js
<!--[if lt IE 9]>
  <script
    src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js">
  </script>
<![endif]-->


三，不使用绝对宽度
由于网页会根据屏幕宽度布局，所以不能使用绝对宽度的布局。
也不能使用具有绝对宽度的元素。

CSS代码不能指定像素宽度：
    width:xxx px;
只能指定百分比宽度：
　　width: xx%;
或者
　　width:auto;


四，相对大小的字体
字体也不能使用绝对大小（px），而只能使用相对大小（em）。
body{
    font:normal 100% Helvetica,Arial, sans-serif;
}
上面的代码指定，字体大小是页面默认大小的100%，即16像素。

h1{
   font-size:1.5em;
}
然后，h1的大小是默认大小的1.5倍，即24像素（24/16=1.5）

small{
   font-size:0.875em;
}
small元素的大小是默认大小的0.875倍，即14像素（14/16=0.875）


五，流动布局
‘流动布局’的含义是，各个区域的位置都是浮动的，不是固定不变的。
.main{
     float:right;
	 width:70%;
}
.leftBar{
     float:left;
	 width:25%;
}
float的好处是，如果宽度太小，放不下两个元素，后面的元素会自动滚动到前面元素的下方，不会在水平方向overflow（溢出），避免了水平滚动条的出现。

另外，绝对定位（position：absolute）的使用，也是非常小心。


六，选择加载CSS
‘自适应网页设计’的核心，就是CSS3引入的Media Query模块
它的意思就是，自动探测屏幕宽度，然后加载相应的CSS文件。

<link rel='stylesheet' type='text/css' 
media='screen and (max-device-width:400px)'
href='thinScreen.css' />
上面的代码意思是，如果屏幕小于400像素(max-device-width:400px),就加载thinScreen.css

<link rel='stylesheet' type='text/css'
media='screen and (min-width:400px) and (max-device-width:600px)'
href='smallScreen.css' />
如果屏幕宽度在400像素和600像素之间，则加载smallScreen.css文件。

除了用html标签加载css文件，还可以在现有css文件中加载。
@import url('tinyScreen.css') screen and (max-device-width:400px);


七，CSS的@media规则
@media screen and (max-device-width:400px){
   .column{
      float:none;
	  width:auto;
   }
    
   #sidebar{
      display:none;
   }	
}
上面的代码意思是，如果屏幕宽度小于400像素，则column块取消浮动（float:none）、宽度自动调节（width:auto），sidebar块不显示（display:none）。


八，图片的自适应（fluid image）
除了布局和文本，‘自己适应网页设计’还必须实现图片的自动缩放。
img{max-width:100%;}

对于大多数网页的视频也有效，也可以写成：
img,object{max-width:100%;}

老版本的IE不支持max-width,所以只好写成：
img{width:100%;}

此外,windows平台缩放图片时，可能出现图像失真现象。这时，可以尝试使用IE的专有命令：
img{-ms-interpolation-mode:bicubic;}

或者，Ethan Marcotte的imgSizer.js
addLoadEvent(function(){
   var imgs=
document.getElementById('content').getElementByTayName('img');
   imgSizer.collate(imgs); 		 	 
});

不过，有条件的话，最好还是根据不同大小屏幕加装不同分辨率的图片。














































































